name: Manual Java Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.2.3 â€” no "v" prefix)'
        required: true
        type: string
      notes:
        description: 'Optional release notes'
        required: false
        type: string

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Set release notes fallback
        run: |
          if [ -z "${{ github.event.inputs.notes }}" ]; then
            echo "RELEASE_NOTES=Automatically published release" >> $GITHUB_ENV
          else
            echo "RELEASE_NOTES=${{ github.event.inputs.notes }}" >> $GITHUB_ENV
          fi

      - name: Build with Maven
        run: mvn clean package -Drevision=${{ github.event.inputs.version }}

      - name: Create source zip
        run: |
          zip -r source-${{ github.event.inputs.version }}.zip . -x '*.git*' 'target/*'

      - name: Create source tar.gz
        run: |
          tar --exclude='./.git' --exclude='./target' -czvf source-${{ github.event.inputs.version }}.tar.gz .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifact (JAR)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload source archives
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: |
            source-${{ github.event.inputs.version }}.zip
            source-${{ github.event.inputs.version }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
