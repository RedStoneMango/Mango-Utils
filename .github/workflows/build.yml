name: Build & Release Utilities Project

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Extract version from pom.xml
        id: extract_version
        run: |
          set -e
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version from pom.xml: $VERSION"
          # Check if this is a pre-release version (contains a hyphen)
          if [[ "$VERSION" == *-* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Stop if version is a pre-release
        if: env.IS_PRERELEASE == 'true'
        run: echo "Pre-release version detected ($PROJECT_VERSION). Skipping release." && exit 0

      - name: Set up GitHub CLI
        uses: cli/cli-action@v2

      - name: Check if release already exists
        id: check_release
        run: |
          TAG="${{ env.PROJECT_VERSION }}"
          if gh release view "$TAG" --repo "${{ github.repository }}" > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven
        run: mvn clean package --file pom.xml

      - name: Upload GitHub Release (Create or Update)
        run: |
          TAG="$PROJECT_VERSION"
          NAME="Release $TAG"
          FILES="target/*.jar"

          if [ "${{ steps.check_release.outputs.exists }}" = "true" ]; then
            echo "Updating existing release for tag $TAG"
            gh release upload "$TAG" $FILES --clobber --repo "$GITHUB_REPOSITORY"
          else
            echo "Creating new release for tag $TAG"
            gh release create "$TAG" $FILES --title "$NAME" --repo "$GITHUB_REPOSITORY"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
